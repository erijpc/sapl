# -*- coding: utf-8 -*-
# Generated by Django 1.11.29 on 2020-05-13 18:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.utils.timezone


def create_default_cronometros(apps, schema_editor):
    tipos_default = ['Cronômetro do Discurso', 'Cronômetro do Aparte', 
                     'Cronômetro da Questão de Ordem', 'Cronômetro de Considerações Finais']
    Cronometro = apps.get_model('painel', 'Cronometro')
    
    for i,tipo in enumerate(tipos_default):
        Cronometro.objects.get_or_create(tipo=tipo, duracao_cronometro='00:05:00', status='S', ativo=True, ordenacao=i+1)


class Migration(migrations.Migration):

    dependencies = [
        ('painel', '0002_auto_20180523_1430'),
    ]

    operations = [
        migrations.CreateModel(
            name='PainelConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cronometro_ordem', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Cronômetro da Questão de Ordem deve travar os demais?')),
                ('disparo_cronometro', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Cronômetros devem disparar com antecedência?')),
                ('tempo_disparo_antecedencia', models.DurationField(blank=True, default='00:00:30', null=True, verbose_name='Cronômetros devem disparar com quanto tempo de antecedência?')),
                ('tempo_disparo_termino', models.DurationField(blank=True, default='00:00:05', null=True, verbose_name='Cronômetros devem permanecer tocando por quanto tempo ao término?')),
                ('exibir_nome_casa', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=True, verbose_name='Exibir nome da Casa Legislativa no painel?')),
                ('mostrar_votos_antecedencia', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Mostrar votos informados antes do fim da votação?')),
                ('mostrar_ementa', models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Mostrar ementa da matéria?')),
            ],
            options={
                'verbose_name': 'Configurações do Painel',
                'verbose_name_plural': 'Configurações do Painel',
                'ordering': ('-id',),
            },
        ),
        migrations.AlterModelOptions(
            name='cronometro',
            options={'ordering': ['ordenacao'], 'verbose_name': 'Cronômetro', 'verbose_name_plural': 'Cronômetros'},
        ),
        migrations.RemoveField(
            model_name='cronometro',
            name='data_cronometro',
        ),
        migrations.AddField(
            model_name='cronometro',
            name='ativo',
            field=models.BooleanField(choices=[(True, 'Sim'), (False, 'Não')], default=False, verbose_name='Ativo?'),
        ),
        migrations.AddField(
            model_name='cronometro',
            name='duracao_cronometro',
            field=models.DurationField(default='00:05:00', verbose_name='Duração do cronômetro'),
        ),
        migrations.AddField(
            model_name='cronometro',
            name='ordenacao',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Ordenação'),
        ),
        migrations.AlterField(
            model_name='cronometro',
            name='status',
            field=models.CharField(choices=[('I', 'Start'), ('R', 'Reset'), ('S', 'Stop'), ('C', 'Increment')], default='R', max_length=1, verbose_name='Status do cronômetro'),
        ),
        migrations.AlterField(
            model_name='cronometro',
            name='tipo',
            field=models.CharField(max_length=100, unique=True, verbose_name='Tipo Cronômetro'),
        ),
        migrations.RunPython(create_default_cronometros),
        migrations.AddField(
            model_name='cronometro',
            name='last_stop_duration',
            field=models.DurationField(blank=True, null=True, verbose_name='Última duração salva em stop'),
        ),
        migrations.AddField(
            model_name='cronometro',
            name='ultima_alteracao_status',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
    ]
